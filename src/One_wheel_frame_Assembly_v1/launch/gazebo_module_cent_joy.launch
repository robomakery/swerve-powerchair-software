<launch>
  <include
    file="$(find gazebo_ros)/launch/empty_world.launch" />
    
  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />
    
    <param
   		 name="robot_description"
   		 textfile="$(find One_wheel_frame_Assembly_v1)/urdf/One_wheel_frame_Assembly_plus_module.urdf" />
    <node
    name="robot_state_publisher_transformer"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
    
    
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-file $(find One_wheel_frame_Assembly_v1)/urdf/One_wheel_frame_Assembly_plus_module_center.urdf -urdf -model One_wheel_frame_Assembly_v1 -z 1"
    output="screen" />
    
    <rosparam command="load"
            file="$(find One_wheel_frame_Assembly_v1)/config/joint_controllers.yaml" />


   <node name="grisho_controller_spawner" pkg="controller_manager" type="spawner" 
     args="grisho/state
     	   grisho/position/chassis_wheel_left_joint
     	   grisho/position/chassis_wheel_right_joint
     	   grisho/position/base_to_rot_fork
     	   grisho/position/fork_to_wheel"
    	  />
    
    
    
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />
    
    	 <!-- joy node -->
   <node respawn="true" pkg="joy"
        type="joy_node" name="rover_joy" >
    <param name="dev" type="string" value="/dev/input/js0" />
    <param name="deadzone" value="0.1" /> 
   <!-- <param name="autorepeat_rate" value="20" /> --> 
  </node> 


 <!-- Axes -->
  <param name="axis_linear" value="1" type="int"/>
  <param name="axis_angular" value="0" type="int"/>
  <param name="scale_linear" value="2" type="double"/>
  <param name="scale_angular" value="2" type="double"/>
  <node pkg="learning_joy" type="rover_teleop_joy_fourwheel_new_module.py" name="teleop_rover"/> 
    
    
    
    
    
</launch>
